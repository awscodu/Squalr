<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Squalr" #>
<#@ import namespace="Squalr.Engine" #>

using System;
using Squalr.Engine.Scripting;
using Squalr.Engine.Scripting.Graphics;
using Squalr.Engine.Scripting.Hook;
using Squalr.Engine.Scripting.Input;
using Squalr.Engine.Scripting.Memory;
	
/// <summary>
/// A script template which includes all necessary engine components by default.
/// </summary>
public class Script
{
	/// <summary>
	/// The engine to provide access to memory, graphics, input, etc
	/// </summary>
	private readonly ScriptEngine Engine = new ScriptEngine();

	/// <summary>
	/// Gets the API to access memory in the target process.
	/// </summary>
	private IMemoryCore Memory { get { return Engine.MemoryCore; } }

	/// <summary>
	/// Gets the API to access graphics features (DirectX, OpenGL)
	/// </summary>
	private IGraphicsCore Graphics { get { return Engine.GraphicsCore; } }

	/// <summary>
	/// Gets the API to access process hook features (speed hack, unrandomizer, etc).
	/// </summary>
	private IHookCore Hook { get { return Engine.HookCore; } }
	
	/// <summary>
	/// Gets the API to access user input.
	/// </summary>
	private IInputCore Input { get { return Engine.InputCore; } }
	
	/// <summary>
	/// Gets or sets a function to deactivate this script. This allows for the script to deactivate itself.
	/// </summary>
	public Action Deactivate { get; set; }
}
//// End class