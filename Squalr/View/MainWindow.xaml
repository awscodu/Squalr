<shell:Window
    x:Class="Squalr.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDock="clr-namespace:Squalr.Theme;assembly=Squalr.Theme"
    xmlns:content="clr-namespace:Squalr.Content"
    xmlns:converters="clr-namespace:Squalr.Source.Mvvm.Converters"
    xmlns:coreView="clr-namespace:Squalr.View"
    xmlns:docking="clr-namespace:Squalr.Source.Docking"
    xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:layout="clr-namespace:Squalr.Theme.Layout;assembly=Squalr.Theme"
    xmlns:layoutControls="clr-namespace:Squalr.Theme.Controls;assembly=Squalr.Theme"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:theme="clr-namespace:Squalr.Theme.Themes;assembly=Squalr.Theme"
    xmlns:view="clr-namespace:Squalr.View"
    x:Name="SqualrWindow"
    Title="Squalr"
    Width="1280"
    Height="840"
    x:ClassModifier="internal"
    AllowsTransparency="False"
    DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}"
    WindowStyle="None">
    <x:Code>
        <![CDATA[ public MainWindow() { InitializeComponent(); }]]>
    </x:Code>
    <shell:Window.Resources>
        <converters:IconConverter x:Key="IconConverter" />
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToHiddenConverter"
            False="Hidden"
            True="Visible" />
    </shell:Window.Resources>
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="{Binding ActualHeight, ElementName=titlebar}" />
    </shell:WindowChrome.WindowChrome>
    <intr:Interaction.Triggers>
        <intr:EventTrigger EventName="Loaded">
            <intr:InvokeCommandAction Command="{Binding LoadLayoutCommand}" CommandParameter="{Binding ., ElementName=dockManager}" />
        </intr:EventTrigger>
        <intr:EventTrigger EventName="Unloaded">
            <intr:InvokeCommandAction Command="{Binding SaveLayoutCommand}" CommandParameter="{Binding ., ElementName=dockManager}" />
        </intr:EventTrigger>
        <intr:EventTrigger EventName="ContentRendered">
            <intr:InvokeCommandAction Command="{Binding DisplayChangeLogCommand}" />
        </intr:EventTrigger>
    </intr:Interaction.Triggers>
    <shell:Border BorderBrush="{StaticResource SqualrColorBlue}" BorderThickness="1">
        <shell:Grid>
            <shell:Grid.RowDefinitions>
                <!--  Title Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Menu Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Button Menu Bar Row  -->
                <shell:RowDefinition Height="Auto" />
                <!--  Docking Panel Row  -->
                <shell:RowDefinition Height="*" />
                <!--  Status Bar Row  -->
                <shell:RowDefinition Height="Auto" />
            </shell:Grid.RowDefinitions>

            <!--  Title Bar  -->
            <shell:Grid
                x:Name="titlebar"
                Grid.Row="0"
                Background="{StaticResource SqualrColorGray20}">
                <shell:Grid.ColumnDefinitions>
                    <!--  Title Text Column  -->
                    <shell:ColumnDefinition />
                    <!--  Buttons  -->
                    <shell:ColumnDefinition Width="Auto" />

                </shell:Grid.ColumnDefinitions>
                <shell:Grid Grid.Column="0">

                    <shell:Grid.ColumnDefinitions>
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                        <shell:ColumnDefinition Width="Auto" />
                    </shell:Grid.ColumnDefinitions>
                    <shell:Image
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="4"
                        Source="{x:Static content:Images.SqualrDev}" />
                    <shell:TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        DataContext="{Binding Source={StaticResource ViewModelLocator}}"
                        Foreground="{StaticResource SqualrColorWhite}"
                        Text="* "
                        Visibility="{Binding ProjectExplorerViewModel.HasUnsavedChanges, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <shell:TextBlock
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource SqualrColorWhite}"
                        Text="Squalr" />
                    <shell:TextBlock
                        Grid.Column="3"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource SqualrColorWhite}"
                        Text=" - " />
                    <shell:TextBlock
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        DataContext="{Binding Source={StaticResource ViewModelLocator}}"
                        Foreground="{StaticResource SqualrColorWhite}"
                        Text="{Binding ProjectExplorerViewModel.ProjectFilePath}" />
                </shell:Grid>
                <shell:Menu
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Background="Transparent">
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding MinimizeCommand}"
                        CommandParameter="{Binding ElementName=SqualrWindow}"
                        ToolTip="Minimize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Decreased}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding MaximizeRestoreCommand}"
                        CommandParameter="{Binding ElementName=SqualrWindow}"
                        ToolTip="Maximize/Restore"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Maximize}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:MenuItem
                        Height="24"
                        Command="{Binding CloseCommand}"
                        CommandParameter="{Binding ElementName=SqualrWindow}"
                        ToolTip="Close"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.X}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                </shell:Menu>
            </shell:Grid>

            <!--  Menu Bar  -->
            <shell:Grid Grid.Row="1">
                <shell:Menu
                    Background="{StaticResource SqualrColorGray20}"
                    BorderBrush="{StaticResource SqualrColorWhite}"
                    Foreground="{StaticResource SqualrColorWhite}">
                    <!--  File Header  -->
                    <shell:MenuItem
                        BorderThickness="0"
                        DataContext="{Binding Source={StaticResource ViewModelLocator}}"
                        Header="File">
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding ProjectExplorerViewModel.OpenProjectCommand}"
                            Header="Open"
                            Style="{Binding}" />
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding ProjectExplorerViewModel.SaveProjectCommand}"
                            Header="Save"
                            Style="{Binding}" />
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding ProjectExplorerViewModel.ImportProjectCommand}"
                            Header="Import Project"
                            Style="{Binding}" />
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding ProjectExplorerViewModel.ExportProjectCommand}"
                            Header="Export Project"
                            Style="{Binding}" />
                        <shell:MenuItem
                            BorderThickness="0"
                            Command="{Binding MainViewModel.CloseCommand}"
                            CommandParameter="{Binding ElementName=SqualrWindow}"
                            Header="Exit"
                            Style="{Binding}" />
                    </shell:MenuItem>

                    <!--  Edit Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Edit">
                        <shell:MenuItem
                            Header="Settings"
                            IsCheckable="True"
                            IsChecked="{Binding SettingsViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                    </shell:MenuItem>

                    <!--  Layout Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Layout">
                        <shell:MenuItem
                            Command="{Binding MainViewModel.ResetLayoutCommand}"
                            CommandParameter="{Binding ., ElementName=dockManager}"
                            Header="Reset Layout"
                            Style="{Binding}" />
                    </shell:MenuItem>

                    <!--  Windows Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Windows">
                        <shell:MenuItem
                            Header="Process Selector"
                            IsCheckable="True"
                            IsChecked="{Binding ProcessSelectorViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Project Explorer"
                            IsCheckable="True"
                            IsChecked="{Binding ProjectExplorerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Property Viewer"
                            IsCheckable="True"
                            IsChecked="{Binding PropertyViewerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Output"
                            IsCheckable="True"
                            IsChecked="{Binding OutputViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Scan Results"
                            IsCheckable="True"
                            IsChecked="{Binding ScanResultsViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Pointer Scan Results"
                            IsCheckable="True"
                            IsChecked="{Binding PointerScanResultsViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Snapshot Manager"
                            IsCheckable="True"
                            IsChecked="{Binding SnapshotManagerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header=".Net Explorer"
                            IsCheckable="True"
                            IsChecked="{Binding DotNetExplorerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                    </shell:MenuItem>

                    <!--  Scans Header  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Scans">
                        <shell:MenuItem
                            Header="Change Counter"
                            IsCheckable="True"
                            IsChecked="{Binding ChangeCounterViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}"
                            Visibility="Collapsed" />
                        <shell:MenuItem
                            Header="Input Correlator"
                            IsCheckable="True"
                            IsChecked="{Binding InputCorrelatorViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Manual Scanner"
                            IsCheckable="True"
                            IsChecked="{Binding ManualScannerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Label Thresholder"
                            IsCheckable="True"
                            IsChecked="{Binding LabelThresholderViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}"
                            Visibility="Collapsed" />
                        <shell:Separator />
                        <shell:MenuItem
                            Header="Pointer Scanner"
                            IsCheckable="True"
                            IsChecked="{Binding PointerScannerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                    </shell:MenuItem>

                    <!--  Debugger  -->
                    <shell:MenuItem DataContext="{Binding Source={StaticResource ViewModelLocator}}" Header="Debugger">
                        <shell:MenuItem
                            Header="Disassembly"
                            IsCheckable="True"
                            IsChecked="{Binding DisassemblyViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                        <shell:MenuItem
                            Header="Code Tracer"
                            IsCheckable="True"
                            IsChecked="{Binding CodeTracerViewModel.IsVisible, Mode=TwoWay}"
                            Style="{Binding}" />
                    </shell:MenuItem>
                </shell:Menu>
            </shell:Grid>

            <!--  Button Menu Bar  -->
            <shell:WrapPanel Grid.Row="2" Background="{StaticResource SqualrColorGray20}">
                <shell:Menu
                    Padding="4"
                    Background="Transparent"
                    DataContext="{Binding Source={StaticResource ViewModelLocator}}">
                    <shell:MenuItem Command="{Binding ProcessSelectorViewModel.Show}" ToolTip="Select a Target Process">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.SelectProcess}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:Separator Style="{DynamicResource VerticalSeparator}" />
                    <shell:MenuItem Command="{Binding ProjectExplorerViewModel.OpenProjectCommand}" ToolTip="Open Project">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Open}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:MenuItem Command="{Binding ProjectExplorerViewModel.SaveProjectCommand}" ToolTip="Save Project">
                        <shell:MenuItem.Header>
                            <shell:Image
                                Width="16"
                                Height="16"
                                Source="{x:Static content:Images.Save}" />
                        </shell:MenuItem.Header>
                    </shell:MenuItem>
                    <shell:Separator Style="{DynamicResource VerticalSeparator}" />
                </shell:Menu>
                <shell:ComboBox
                    Width="196"
                    Height="24"
                    Background="{StaticResource SqualrColorGray20}"
                    ItemsSource="{Binding ProcessSelectorViewModel.WindowedProcessList, Source={StaticResource ViewModelLocator}}"
                    SelectedItem="{Binding ProcessSelectorViewModel.SelectedProcess, Source={StaticResource ViewModelLocator}, Mode=TwoWay}">
                    <shell:ComboBox.ItemTemplate>
                        <shell:DataTemplate>
                            <shell:Grid>
                                <shell:Grid.ColumnDefinitions>
                                    <shell:ColumnDefinition Width="Auto" />
                                    <shell:ColumnDefinition />
                                </shell:Grid.ColumnDefinitions>
                                <shell:Image
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,6,0"
                                    Source="{Binding Path=Icon, Converter={StaticResource IconConverter}}" />
                                <shell:TextBlock
                                    Grid.Column="1"
                                    Foreground="{StaticResource SqualrColorWhite}"
                                    Text="{Binding Path=ProcessName}" />
                            </shell:Grid>
                        </shell:DataTemplate>
                    </shell:ComboBox.ItemTemplate>
                </shell:ComboBox>
            </shell:WrapPanel>

            <!--  Docking Panel AnchorablesSource="{Binding Tools}"  -->
            <avalonDock:DockingManager
                x:Name="dockManager"
                Grid.Row="3"
                AnchorablesSource="{Binding DockingViewModel.Tools, Source={StaticResource ViewModelLocator}}"
                Background="{StaticResource SqualrColorGray20}">
                <!--  Theme  -->
                <avalonDock:DockingManager.ThemeBase>
                    <theme:DarkTheme />
                </avalonDock:DockingManager.ThemeBase>

                <!--  All Dockable Windows  -->
                <avalonDock:DockingManager.LayoutItemTemplateSelector>
                    <view:ViewTemplateSelector>
                        <!--  Error Message When Missing Data Template (KEEP AS FIRST IN THIS LIST)  -->
                        <view:ViewTemplateSelector.DataTemplateErrorViewTemplate>
                            <shell:DataTemplate>
                                <view:DataTemplateError />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.DataTemplateErrorViewTemplate>
                        <!--  Project Explorer  -->
                        <view:ViewTemplateSelector.ProjectExplorerViewTemplate>
                            <shell:DataTemplate>
                                <view:ProjectExplorer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ProjectExplorerViewTemplate>
                        <!--  Change Counter  -->
                        <view:ViewTemplateSelector.ChangeCounterViewTemplate>
                            <shell:DataTemplate>
                                <view:ChangeCounter />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ChangeCounterViewTemplate>
                        <!--  Input Correlator  -->
                        <view:ViewTemplateSelector.InputCorrelatorViewTemplate>
                            <shell:DataTemplate>
                                <view:InputCorrelator />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.InputCorrelatorViewTemplate>
                        <!--  Label Thresholder  -->
                        <view:ViewTemplateSelector.LabelThresholderViewTemplate>
                            <shell:DataTemplate>
                                <view:LabelThresholder />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.LabelThresholderViewTemplate>
                        <!--  Manual Scanner  -->
                        <view:ViewTemplateSelector.ManualScannerViewTemplate>
                            <shell:DataTemplate>
                                <view:ManualScanner />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ManualScannerViewTemplate>
                        <!--  Pointer Scanner  -->
                        <view:ViewTemplateSelector.PointerScannerViewTemplate>
                            <shell:DataTemplate>
                                <view:PointerScanner />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.PointerScannerViewTemplate>
                        <!--  Snapshot Manager  -->
                        <view:ViewTemplateSelector.SnapshotManagerViewTemplate>
                            <shell:DataTemplate>
                                <view:SnapshotManager />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.SnapshotManagerViewTemplate>
                        <!--  Scan Results  -->
                        <view:ViewTemplateSelector.ScanResultsViewTemplate>
                            <shell:DataTemplate>
                                <view:ScanResults />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ScanResultsViewTemplate>
                        <!--  Pointer Scan Results  -->
                        <view:ViewTemplateSelector.PointerScanResultsViewTemplate>
                            <shell:DataTemplate>
                                <view:PointerScanResults />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.PointerScanResultsViewTemplate>
                        <!--  .Net Explorer  -->
                        <view:ViewTemplateSelector.DotNetExplorerViewTemplate>
                            <shell:DataTemplate>
                                <view:DotNetExplorer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.DotNetExplorerViewTemplate>
                        <!--  Settings  -->
                        <view:ViewTemplateSelector.SettingsViewTemplate>
                            <shell:DataTemplate>
                                <view:Settings />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.SettingsViewTemplate>
                        <!--  Process Selector  -->
                        <view:ViewTemplateSelector.ProcessSelectorViewTemplate>
                            <shell:DataTemplate>
                                <view:ProcessSelector />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.ProcessSelectorViewTemplate>
                        <!--  Property Viewer  -->
                        <view:ViewTemplateSelector.PropertyViewerViewTemplate>
                            <shell:DataTemplate>
                                <view:PropertyViewer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.PropertyViewerViewTemplate>
                        <!--  Output  -->
                        <view:ViewTemplateSelector.OutputViewTemplate>
                            <shell:DataTemplate>
                                <view:Output />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.OutputViewTemplate>
                        <!--  Debugger  -->
                        <view:ViewTemplateSelector.DisassemblyViewTemplate>
                            <shell:DataTemplate>
                                <view:Disassembly />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.DisassemblyViewTemplate>
                        <!--  Code Tracer  -->
                        <view:ViewTemplateSelector.CodeTracerViewTemplate>
                            <shell:DataTemplate>
                                <view:CodeTracer />
                            </shell:DataTemplate>
                        </view:ViewTemplateSelector.CodeTracerViewTemplate>
                    </view:ViewTemplateSelector>
                </avalonDock:DockingManager.LayoutItemTemplateSelector>

                <!--  Container Style  -->
                <avalonDock:DockingManager.LayoutItemContainerStyleSelector>
                    <docking:PanesStyleSelector>
                        <!--  General Docking Tools Style  -->
                        <docking:PanesStyleSelector.ToolStyle>
                            <shell:Style TargetType="{x:Type layoutControls:LayoutAnchorableItem}">
                                <shell:Setter Property="Title" Value="{Binding Model.Title}" />
                                <shell:Setter Property="IconSource" Value="{Binding Model.IconSource}" />
                                <shell:Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToHiddenConverter}}" />
                                <shell:Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                                <shell:Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                                <shell:Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}" />
                            </shell:Style>
                        </docking:PanesStyleSelector.ToolStyle>
                    </docking:PanesStyleSelector>
                </avalonDock:DockingManager.LayoutItemContainerStyleSelector>

                <!--  Layout Style  -->
                <layout:LayoutRoot>
                    <!--  Docking Group for All Windows  -->
                    <layout:LayoutPanel />
                </layout:LayoutRoot>
            </avalonDock:DockingManager>

            <!--  Status Bar  -->
            <shell:Border
                Grid.Row="4"
                Height="24"
                Background="{StaticResource SqualrColorBlue}"
                DataContext="{Binding ActionSchedulerViewModel, Source={StaticResource ViewModelLocator}}">
                <shell:Grid>
                    <shell:ItemsControl HorizontalAlignment="Right" ItemsSource="{Binding Path=ActiveTasks}">
                        <shell:ItemsControl.ItemTemplate>
                            <shell:DataTemplate>
                                <shell:WrapPanel VerticalAlignment="Center" Visibility="{Binding Path=TrackProgress, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <shell:TextBlock
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        Foreground="{StaticResource SqualrColorWhite}"
                                        Text="{Binding Path=TaskName}" />
                                    <shell:Grid>
                                        <shell:ProgressBar Width="96" Value="{Binding Path=Progress, Mode=OneWay}" />
                                        <shell:TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="{StaticResource SqualrColorRed}"
                                            Text="(Canceling)"
                                            Visibility="{Binding Path=IsCanceled, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                    </shell:Grid>
                                    <shell:Button
                                        VerticalAlignment="Center"
                                        Background="Transparent"
                                        Command="{Binding ActionSchedulerViewModel.CancelTaskCommand, Source={StaticResource ViewModelLocator}}"
                                        CommandParameter="{Binding .}"
                                        ToolTip="Cancel Action">
                                        <shell:Image
                                            Width="16"
                                            Height="16"
                                            Source="{x:Static content:Images.Cancel}" />
                                    </shell:Button>
                                </shell:WrapPanel>
                            </shell:DataTemplate>
                        </shell:ItemsControl.ItemTemplate>
                        <shell:ItemsControl.ItemsPanel>
                            <shell:ItemsPanelTemplate>
                                <shell:StackPanel Orientation="Horizontal" />
                            </shell:ItemsPanelTemplate>
                        </shell:ItemsControl.ItemsPanel>
                    </shell:ItemsControl>
                </shell:Grid>
            </shell:Border>
        </shell:Grid>
    </shell:Border>
</shell:Window>
